import json
import random

from communication_types import VarInt
from packet.packet_data import PacketGenerator, Packet


class C2S0x00:
    @staticmethod
    def get_data(packet: Packet):
        # Handshake
        # Get the protocol version

        ver = packet.get_varint()

        # Get the address
        address = packet.get_str()

        # Get the port

        port = packet.get_int()

        # Get the status
        status = int(packet.get_byte())
        return address, port, status, ver


class S2C0x00:
    @staticmethod
    def generate_data(server, ver):
        packet_generator = PacketGenerator(0)

        packet_generator.add(json.dumps(
            {'version': {'name': 'GHOSTLINESS', 'protocol': int(ver)},
             'players': {'max': server.max_players, 'online': server.current_players,
                         'sample': [{
                             'name': 'think_of_death',
                             'id': '4566e69f-c907-48ee-8d71-d7ba5aa00d20'}]},
             'description': {'text': server.motd},
             'favicon': f'data:image/png;base64,{server.icon}',
             'modinfo': {'type': 'GHOSTLINESS', 'modList': []}}))
        return Packet(bytes(packet_generator))


class S2C0x01:
    @staticmethod
    def generate_data(server):
        packet_generator = PacketGenerator(1)
        # Packet ID	State	Bound To	Field Name	        Field Type	Notes
        #                               ID                  String (20) Appears to be empty.
        #                               Public Key Length	VarInt	    Length of Public Key
        # 0x01      Login   Client      Public Key	        Byte Array	Public Key
        #                               Verify Token Length	VarInt	    Length of Verify Token. Always 4 for Notchian
        #                                                               servers.
        #                               Verify Token	    Byte Array	A sequence of random bytes generated by the server.

        packet_generator.add(server.name)
        packet_generator.add(VarInt(len(server.pub)))
        packet_generator.add(server.pub)
        packet_generator.add(VarInt(4))
        packet_generator.add(random.randint(268435456, 4294967295).to_bytes(4, 'big'))
        return Packet(bytes(packet_generator))
